# Generated by Django 5.0.4 on 2024-07-22 22:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('desc', models.TextField(blank=True, help_text='Add Description and Instruction for Report Submission', max_length=500, null=True, verbose_name='Description')),
                ('submit_report', models.BooleanField(default=False, verbose_name='Enable Report Submission')),
                ('status', models.IntegerField(blank=True, choices=[(0, 'Created'), (1, 'Started'), (2, 'Completed')], default=0, null=True, verbose_name='Status')),
                ('mandatory', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('desc', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'permissions': (('training_category_add', 'Can Add Training category'), ('training_category_change', 'Can Change Training category'), ('training_category_view', 'Can View Training category'), ('training_category_delete', 'Can Delete Training category')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booked', models.DateTimeField(auto_now_add=True, verbose_name='Booked on')),
                ('start_date', models.DateField(help_text='Note: Please specify a date within one week time.', null=True, verbose_name='Training Start Date')),
                ('paid', models.BooleanField(default=False, verbose_name='Paid')),
                ('rzp_payment_id', models.TextField(blank=True, null=True, verbose_name='Razorpay Payment ID')),
                ('rzp_order_id', models.TextField(blank=True, null=True, verbose_name='Razorpay Order ID')),
                ('rzp_signature', models.TextField(blank=True, null=True, verbose_name='Razorpay Signature')),
                ('status', models.IntegerField(choices=[(0, 'Booked'), (1, 'Completed'), (2, 'Cancelled'), (3, 'Deleted'), (4, 'Confirmed'), (5, 'Scheduled'), (6, 'Rescheduled')], default=0, null=True, verbose_name='Status')),
                ('reason', models.TextField(blank=True, help_text='Reason for Cancellation', max_length=500, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='training.category')),
            ],
            options={
                'default_permissions': ('add_training', 'cancel_training'),
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(verbose_name='Link')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='training.assignment')),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, choices=[('module', 'Module'), ('lesson', 'Lesson'), ('topic', 'Topic'), ('subtopic', 'Subtopic'), ('session', 'Session'), ('content', 'Content'), ('assignment', 'Assignment'), ('assessment', 'Assessment'), ('livesession', 'Live Session')], default='module', max_length=100, null=True)),
                ('order', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(0, 'Created'), (1, 'Started'), (2, 'Completed')], default=0, null=True)),
                ('active', models.BooleanField(default=False)),
                ('ref_id', models.BigIntegerField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='training.node', verbose_name='parent')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='assignment',
            name='node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='training.node'),
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('duration_type', models.IntegerField(choices=[(1, 'Hours'), (2, 'Days'), (3, 'Weeks'), (4, 'Months')], default=1, verbose_name='Type')),
                ('objectives', models.TextField(blank=True, max_length=500, null=True, verbose_name='Objectives of Session')),
                ('live', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('mandatory', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('status', models.IntegerField(blank=True, choices=[(0, 'Created'), (1, 'Started'), (2, 'Completed')], default=0, null=True, verbose_name='Status')),
                ('node', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='session', to='training.node')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.FileField(help_text='Supported file formats (Audio, Video & Text) : mp3, wav, ogg, mp4, webm, pdf, doc, docx', null=True, upload_to='training/content', verbose_name='Training Content')),
                ('type', models.CharField(blank=True, choices=[('video', 'Video'), ('audio', 'Audio'), ('text', 'Text')], max_length=50, null=True, verbose_name='Content format')),
                ('mime', models.CharField(blank=True, max_length=255, null=True)),
                ('node', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='content', to='training.node')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='training.session')),
            ],
        ),
        migrations.CreateModel(
            name='Tracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started', models.BooleanField(default=False, verbose_name='Training started')),
                ('started_on', models.DateTimeField(auto_now_add=True, verbose_name='Started on')),
                ('completed', models.BooleanField(default=False, verbose_name='Completed')),
                ('active_node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_node', to='training.node')),
                ('booking', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tracker', to='training.booking')),
            ],
        ),
        migrations.CreateModel(
            name='TrackAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, help_text='Supported file formats (Text) : doc, docx, pdf', null=True, upload_to='training/assignment', verbose_name='Report File')),
                ('feedback', models.TextField(blank=True, max_length=500, null=True, verbose_name='Feedback')),
                ('score', models.CharField(blank=True, max_length=100, null=True, verbose_name='Score')),
                ('completed', models.BooleanField(default=False, verbose_name='Completed')),
                ('assignment', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tracker_assignment', to='training.assignment')),
                ('tracker', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tracker_assignment', to='training.tracker')),
            ],
        ),
        migrations.CreateModel(
            name='TrackLivesession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('init_schedule', models.BooleanField(default=False, verbose_name='Initiated Live Session')),
                ('trainer_scheduled', models.BooleanField(default=False, verbose_name='Scheduled Live Session')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='Duration (in minutes)')),
                ('completed', models.BooleanField(default=False, verbose_name='Completed')),
                ('zoom_response', models.JSONField(blank=True, null=True, verbose_name='Zoom Response')),
                ('session', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tracker_livesession', to='training.session')),
                ('tracker', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tracker_livesession', to='training.tracker')),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Training Title')),
                ('type', models.IntegerField(choices=[(1, 'Scheduled'), (0, 'Non Scheduled')], default=1, null=True, verbose_name='Training Type')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='Course Duration')),
                ('duration_type', models.IntegerField(blank=True, choices=[(1, 'Hours'), (2, 'Days'), (3, 'Weeks'), (4, 'Months')], default=2, null=True, verbose_name='Duration Type')),
                ('objectives', models.TextField(blank=True, max_length=500, null=True, verbose_name='Training Objectives')),
                ('desc_text', models.TextField(blank=True, max_length=500, null=True, verbose_name='Description Text')),
                ('desc_img', models.ImageField(blank=True, null=True, upload_to='training/', verbose_name='Description Image')),
                ('frequency', models.TextField(blank=True, null=True, verbose_name='Training Frequency')),
                ('amount', models.CharField(max_length=255, null=True, verbose_name='Training Amount')),
                ('setup_complete', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training', to='training.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': ('view', 'add', 'change', 'delete'),
            },
        ),
        migrations.AddField(
            model_name='session',
            name='training',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='training.training'),
        ),
        migrations.AddField(
            model_name='node',
            name='training',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='training.training'),
        ),
        migrations.AddField(
            model_name='booking',
            name='training',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='training.training'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='training',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='training.training'),
        ),
    ]
