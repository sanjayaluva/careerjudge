# Generated by Django 5.0.4 on 2024-08-19 12:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='question_bank.category')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('mcq_text', 'Multiple Choice - Text-based'), ('mcq_image', 'Multiple Choice - Image-based'), ('mcq_mixed', 'Multiple Choice - Text-image mixed'), ('mcq_audio', 'Multiple Choice - Audio-based'), ('mcq_video', 'Multiple Choice - Video-based'), ('mcq_paragraph', 'Multiple Choice - Paragraph-based'), ('mcq_hotspot', 'Multiple Choice - Hotspot'), ('mcq_flash', 'Multiple Choice - Flash-based'), ('fib_text', 'Fill in the Blank - Text-based'), ('fib_image', 'Fill in the Blank - Image-based'), ('fib_audio', 'Fill in the Blank - Audio-based'), ('fib_video', 'Fill in the Blank - Video-based'), ('fib_paragraph', 'Fill in the Blank - Paragraph-based'), ('fib_flash', 'Fill in the Blank - Flash-based'), ('fib_match', 'Fill in the Blank - Match The Following'), ('psy_simple', 'Psychometric Simple Ranking Scale'), ('psy_first', 'Psychometric First Rank-Then Rate Scale'), ('psy_standard', 'Psychometric Standard Rating Scale'), ('psy_forced_single', 'Psychometric Forced-Choice Scale – Single Level Rating'), ('psy_forced_two', 'Psychometric Forced-Choice Scale – Two-Level Rating')], max_length=20)),
                ('text', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_media/')),
                ('audio', models.FileField(blank=True, null=True, upload_to='question_media/')),
                ('video', models.FileField(blank=True, null=True, upload_to='question_media/')),
                ('paragraph', models.TextField(blank=True, null=True)),
                ('answer', models.JSONField(blank=True, null=True, verbose_name=models.CharField(max_length=100))),
                ('flash_interval', models.IntegerField(blank=True, null=True)),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Very Easy'), (2, 'Easy'), (3, 'Medium'), (4, 'Hard'), (5, 'Very Hard')])),
                ('cognitive_level', models.CharField(max_length=50)),
                ('exposure_limit', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(default='DRAFT', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question_bank.category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OptionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_options/')),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='question_bank.question')),
            ],
        ),
        migrations.CreateModel(
            name='MatchItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_item', models.CharField(max_length=255)),
                ('right_item', models.CharField(max_length=255)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching_pairs', to='question_bank.question')),
            ],
        ),
        migrations.CreateModel(
            name='HotspotItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coords', models.JSONField(blank=True, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotspots', to='question_bank.question')),
            ],
        ),
        migrations.CreateModel(
            name='FlashItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_flash/')),
                ('order', models.IntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flash_cards', to='question_bank.question')),
            ],
        ),
    ]
