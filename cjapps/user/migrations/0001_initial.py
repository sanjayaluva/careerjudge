# Generated by Django 5.0.4 on 2024-07-22 22:30

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_group_desc'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='Email Address')),
                ('email_is_verified', models.BooleanField(default=False, verbose_name='Email Verified')),
                ('role', models.CharField(choices=[('1', 'CareerJudge Admin'), ('2', 'Corporate Admin'), ('3', 'Corporate Exclusive'), ('4', 'Psychometrician'), ('5', 'SME/Reviewer'), ('6', 'Trainer'), ('7', 'Group Admin'), ('8', 'Counsellor'), ('9', 'Individual'), ('10', 'Channel Partner'), ('11', 'Corporate Individual'), ('12', 'CJ Manager'), ('13', 'Helpdesk')], default='9', max_length=10, verbose_name='User Role')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=1, null=True, verbose_name='Gender')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('phone', models.CharField(blank=True, max_length=60, null=True, verbose_name='Phone')),
                ('occupation', models.CharField(blank=True, choices=[('employed', 'Employed'), ('self-employed', 'Self Employed'), ('job-seek-fresher', 'Job seeking-Fresher'), ('job-seek-nonfresher', 'Job seeking-nonFresher'), ('college-student', 'College Student'), ('school-student', 'School Student')], max_length=100, null=True, verbose_name='Occupation')),
                ('cur_position', models.CharField(blank=True, max_length=50, null=True, verbose_name='Current Position')),
                ('work_exp', models.IntegerField(blank=True, null=True, verbose_name='Work Experience')),
                ('high_education', models.CharField(blank=True, max_length=50, null=True, verbose_name='Highest Education')),
                ('edu_level', models.CharField(blank=True, choices=[('below-plus2', '5-12'), ('under-grad', 'Undergraduate'), ('post-grad', 'Post Graduate'), ('mphil', 'M-Phil'), ('phd', 'PhD')], max_length=50, null=True, verbose_name='Education Level')),
                ('institution_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Institution Name')),
                ('institution_place', models.CharField(blank=True, max_length=50, null=True, verbose_name='Place of Institution')),
                ('country', models.CharField(blank=True, max_length=50, null=True, verbose_name='Country of Origin')),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='State/Province')),
                ('location', models.CharField(blank=True, max_length=50, null=True, verbose_name='Location')),
                ('assess_pack_alloc', models.CharField(blank=True, max_length=100, null=True, verbose_name='Assessment Package allocated')),
                ('picture', models.ImageField(blank=True, default='default.png', null=True, upload_to='profile_pictures/%y/%m/%d/')),
                ('org_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Organization Name')),
                ('manager_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Manager Name')),
                ('group_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Group Name')),
                ('pan_tan', models.CharField(blank=True, max_length=60, null=True, verbose_name='PAN/TAN')),
                ('off_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Office Address')),
                ('emp_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Employee ID')),
                ('div_region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Division/Region')),
                ('ga_permissions', models.CharField(blank=True, max_length=100, null=True, verbose_name='Permissions Allotted')),
                ('pan', models.CharField(blank=True, max_length=50, null=True, verbose_name='PAN Number')),
                ('bank_ac', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank Account Number')),
                ('bank_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank Name')),
                ('bank_branch', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank Branch')),
                ('bank_ifsc', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank IFSC')),
                ('contact_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Address')),
                ('perm_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Permanent Address')),
                ('domain_exp', models.IntegerField(blank=True, null=True, verbose_name='Domain Experience')),
                ('user_bio', models.CharField(blank=True, max_length=500, null=True, verbose_name='User Biodata')),
                ('chp_agency_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Agency Name')),
                ('chp_agrmt_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Channel Partner Agreement ID')),
                ('chp_contr_period', models.CharField(blank=True, max_length=100, null=True, verbose_name='Contract Period')),
                ('chp_region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Region Allocated')),
                ('rate', models.TextField(blank=True, null=True)),
                ('category', models.TextField(blank=True, null=True)),
                ('createdby', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': (('import_user', 'Can Import User'),),
            },
        ),
    ]
