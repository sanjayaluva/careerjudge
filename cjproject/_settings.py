"""
Django settings for cjproject project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from decouple import config
import os, sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# import environ
# env = environ.Env()
# environ.Env.read_env(os.path.join(BASE_DIR, '.env'))
# environ.Env.read_env(BASE_DIR / '.env')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0django-insecure-f$hm8p^3fbb8mcxfy#entx=vbujbqcfut_ysedop06ov=_+-%s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

AUTH_USER_MODEL = 'user.User'
# AUTH_GROUP_MODEL = 'user.Group'

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'crispy_forms',
    'crispy_bootstrap5',
    'django_filters',
    # 'django_property_filter',
    # 'django_extensions',
    
    'import_export',
    'django_cron',

    # 'treenode', # tree view
    'tree_queries',
    'forms_fieldset',
    'django_quill',

    'cjapp',
    'user',
    'counselling',
    'training',
    'question_bank',
    'assessment',
    # 'course',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cjproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'training.context_processors.training.schedule_form',
            ],
        },
    },
]

WSGI_APPLICATION = 'cjproject.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata' #'UTC'

USE_I18N = True

USE_TZ = True


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         "ENGINE": config("DB_ENGINE", default="django.db.backends.postgresql"),
#         "NAME": config("DB_NAME"),
#         "USER": config("DB_USER"),
#         "PASSWORD": config("DB_PASSWORD"),
#         "HOST": config("DB_HOST", default="localhost"),
#         "PORT": config("DB_PORT", default=5432),
#         'TIME_ZONE': TIME_ZONE,
#     }
#     # 'default': {
#     #     'ENGINE': 'django.db.backends.sqlite3',
#     #     'NAME': BASE_DIR / 'db.sqlite3',
#     # }
# }


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
    #('node_modules', BASE_DIR / 'node_modules'),
]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Custom Settings
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

LOGIN_REDIRECT_URL = "dashboard"
LOGOUT_REDIRECT_URL = "login"
LOGIN_URL = "login"

# Email Settings
DEFAULT_FROM_EMAIL = config("EMAIL_FROM_ADDRESS", default='admin@aknja.site')  # admin@careerjudge.com
EMAIL_FROM_ADDRESS = DEFAULT_FROM_EMAIL
EMAIL_HOST = config("EMAIL_HOST", default='mail.smtp2go.com')
EMAIL_PORT = config("EMAIL_PORT", default='2525')
EMAIL_HOST_USER = config("EMAIL_HOST_USER", default='aknja.site')
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD", default='Aknja#12345')
# EMAIL_USE_TLS = False
# EMAIL_USE_SSL = False
# EMAIL_SSL_CERTFILE = ''
# EMAIL_SSL_KEYFILE = ''
# EMAIL_TIMEOUT = ''

IMPORT_EXPORT_USE_TRANSACTIONS = True

# CRONJOBS = [
#     ('* * * * *', 'counselling.cron.availability_checker')
# ]

CRON_CLASSES = [
    "counselling.cron.CronJobs",
    # ...
]


# Razorpay credentials
RAZORPAY_KEY_ID = 'rzp_test_uuSjjBcWktZKyd'
RAZORPAY_KEY_SECRET = 'QfNk7m18yt4WaD1EVehPYDiI'
RAZORPAY_APP_TITLE = 'Career Judge'
RAZORPAY_APP_VERSION = '1.0.0'
RAZORPAY_CURRENCY = 'INR'

# CSRF_TRUSTED_ORIGINS = ['https://api.razorpay.com/']

# CORS_ORIGIN_WHITELIST = [
#     'https://api.razorpay.com/',
# ]


# Zoom API Credentials.
ZOOM_ACCOUNT_ID = config("ZOOM_ACCOUNT_ID", default='')
ZOOM_CLIENT_ID = config("ZOOM_CLIENT_ID", default='')
ZOOM_CLIENT_SECRET = config("ZOOM_CLIENT_SECRET", default='')
ZOOM_EMAIL = config("ZOOM_EMAIL", default='')


sys.path.append(os.path.join(BASE_DIR, 'cjapps'))


QUILL_CONFIGS = {
    'default':{
        'theme': 'snow',
        'modules': {
            'syntax': True,
            'toolbar': [
                [
                    {'font': []},
                    {'header': []},
                    {'align': []},
                    'bold', 'italic', 'underline', 'strike', #'blockquote',
                    {'color': []},
                    {'background': []},
                ],
                #['code-block', 'link'],
                ['clean'],
            ]
        }
    }
}


# CSRF_COOKIE_SECURE = True
# SESSION_COOKIE_SECURE = True
# SECURE_SSL_REDIRECT = True
